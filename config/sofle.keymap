/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// Define layer numbers

#define ___ &trans
#define BASE 0
#define NAV 1
#define MACRO 2
#define SYMBOL 3
#define NUM 4
#define FUNC 5

// urob includes (https://github.com/urob/zmk-nodefree-config)

#include <behaviors.dtsi>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_58keys.h"

// ZMK includes

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm: hrm {
            label = "hrm";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    sensors {
        triggers-per-rotation = <20>;
    };
};

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

&left_encoder {
    steps = <80>;
};

&right_encoder {
    steps = <80>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&hrm TILDE ESC  &kp N1       &kp N2       &kp N3        &kp N4             &kp N5                                                    &kp N6             &kp N7              &kp N8        &kp N9       &kp N0          &kp BACKSPACE
&kp TAB         &kp Q        &kp W        &kp F         &kp P              &kp G                                                     &kp J              &kp L               &kp U         &kp Y        &kp SEMI        &kp DEL
&kp LCTRL       &kp A        &kp R        &kp S         &kp T              &kp D                                                     &kp H              &kp N               &kp E         &kp I        &kp O           &kp SQT
&kp LSHFT       &kp Z        &kp X        &kp C         &kp V              &kp B             &tog MACRO             &kp C_MUTE       &kp K              &kp M               &kp COMMA     &kp DOT      &kp FSLH        &kp RSHFT
                             &kp LCTRL    &kp LALT      &kp LEFT_GUI   &lt NAV SPACE         &lt FUNC ENTER         &lt FUNC ENTER   &lt SYMBOL BACKSPACE     &kp RIGHT_GUI       &kp RALT      &kp RCTRL
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(Y) LC(Z)>;
        };

        nav {
            label = "Nav";
            bindings = <
&trans    &trans      &trans       &trans       &trans        &trans                               &trans      &trans      &trans       &trans       &trans       &trans
&trans    &trans      &kp HOME     &kp UP       &kp END       &kp PG_UP                            &trans      &kp F7      &kp F8       &kp F9       &kp F10      &trans
&trans    &trans      &kp LEFT     &kp DOWN     &kp RIGHT     &kp PG_DN                            &trans      &kp F4      &kp F5       &kp F6       &kp F11      &trans
&trans    &trans      &trans       &trans       &trans        &trans       &trans      &trans      &trans      &kp F1      &kp F2       &kp F3       &kp F12      &trans
                      &trans       &trans       &trans        &trans       &trans      &trans      &trans      &trans      &trans       &trans
            >;
        };

        macro {
            label = "Macro";
            bindings = <
&bootloader  &bt BT_SEL 0        &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR                          &trans      &trans      &trans      &trans      &trans      &trans
&trans       &trans              &trans         &trans        &trans        &trans                              &trans      &trans      &trans      &trans      &trans      &trans
&trans       &kp LC(LS(ESCAPE))  &kp LS(LG(S))  &trans        &trans        &trans                              &trans      &trans      &trans      &trans      &trans      &trans
&trans       &trans              &trans         &trans        &trans        &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
                                 &trans         &trans        &trans        &trans      &trans      &trans      &trans      &trans      &trans      &trans
            >;
        };

        symbol {
            label = "Syms";
            bindings = <
&trans  &trans            &trans         &trans            &trans           &trans                      &trans      &trans      &trans          &trans      &ext_power EP_TOG       &bootloader
&trans  &kp EXCL          &kp AT         &kp LBRC          &kp RBRC         &kp PIPE                    &kp EQUAL   &kp N7      &kp N8          &kp N9      &kp ASTRK               &trans
&trans  &kp HASH          &kp DLLR       &kp LPAR          &kp RPAR         &kp GRAVE                   &kp MINUS   &kp N4      &kp N5          &kp N6      &kp PLUS                &trans
&trans  &kp PRCNT         &kp CARET      &kp LBKT          &kp RBKT         &kp TILDE   &trans  &trans  &kp AMPS    &kp N1      &kp N2          &kp N3      &kp BSLH                &trans
                          &trans         &trans            &trans           &trans      &trans  &trans  &trans      &trans      &kp N0          &kp DOT
            >;
        };

        number {
            label = "Nums";
            bindings = <
&trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                  &trans        &trans        &trans        &trans        &trans        &trans
&trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans                  &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans        &trans
&kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &trans                  &kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &trans
&kp ENTER     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER     &trans  &trans  &trans  &kp ENTER     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER     &trans
                            &trans        &trans        &trans        &trans  &trans  &trans  &trans        &trans        &trans        &trans
            >;
        };

        function {
            label = "Function";
            bindings = <
&trans        &trans        &trans         &trans        &trans        &trans                              &trans      &trans      &trans      &trans      &trans      &trans
&trans        &trans        &trans         &trans        &trans        &trans                              &trans      &trans      &trans      &trans      &trans      &trans
&trans        &trans        &trans         &trans        &trans        &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
                            &trans         &trans        &trans        &trans      &trans      &trans      &trans      &trans      &trans      &trans
            >;
        };

    };
};
